<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>SQL查询用逗号分隔的数据</title>
    <url>/2021/02/04/SQL%E6%9F%A5%E8%AF%A2%E7%94%A8%E9%80%97%E5%8F%B7%E5%88%86%E9%9A%94%E7%9A%84%E6%95%B0%E6%8D%AE/</url>
    <content><![CDATA[<h1 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h1><p>不同的商品使用逗号分隔保存，现在要求输入指定的商品名称，能够查询到包含该商品的列。</p>
<ul>
<li>输入 <strong>K701</strong> 返回第1、2行</li>
<li>输入 <strong>K702</strong> 返回第2、4行</li>
</ul>
<table>
<thead>
<tr>
<th>编号</th>
<th>商品</th>
</tr>
</thead>
<tbody><tr>
<td>1</td>
<td>K701</td>
</tr>
<tr>
<td>2</td>
<td>K701,K702</td>
</tr>
<tr>
<td>3</td>
<td>K701B,K701C</td>
</tr>
<tr>
<td>4</td>
<td>2K701,K702</td>
</tr>
</tbody></table>
<h1 id="解决思路"><a href="#解决思路" class="headerlink" title="解决思路"></a>解决思路</h1><ul>
<li>方法1：将商品列按照逗号分隔后列转行，然后在转换后的集合里查找符合条件的商品，最后用行ID去原始表反查</li>
<li>方法2: 将每一个商品名称格式化成 <code>,*,</code> 形式，然后使用like查询 <code>like &#39;%,*,%&#39;</code></li>
</ul>
<h1 id="创建测试数据"><a href="#创建测试数据" class="headerlink" title="创建测试数据"></a>创建测试数据</h1><p>创建数据表</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> TestQuery(</span><br><span class="line">id <span class="type">INT</span>,</span><br><span class="line">k_value NVARCHAR(<span class="number">50</span>)</span><br><span class="line">)</span><br></pre></td></tr></table></figure>
<p>添加数据</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> dbo.TestQuery(id,k_value)<span class="keyword">VALUES</span>(<span class="number">1</span>,<span class="string">&#x27;K701&#x27;</span>)</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> dbo.TestQuery(id,k_value)<span class="keyword">VALUES</span>(<span class="number">2</span>,<span class="string">&#x27;K701,K702&#x27;</span>)</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> dbo.TestQuery(id,k_value)<span class="keyword">VALUES</span>(<span class="number">3</span>,<span class="string">&#x27;K701B,K701C&#x27;</span>)</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> dbo.TestQuery(id,k_value)<span class="keyword">VALUES</span>(<span class="number">4</span>,<span class="string">&#x27;2K701,K702&#x27;</span>)</span><br></pre></td></tr></table></figure>
<h1 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h1><h2 id="方法1"><a href="#方法1" class="headerlink" title="方法1"></a>方法1</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">DECLARE</span> <span class="variable">@query</span>_key NVARCHAR(<span class="number">10</span>);</span><br><span class="line"><span class="keyword">SET</span> <span class="variable">@query</span>_key <span class="operator">=</span> <span class="string">&#x27;K701&#x27;</span>;</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span></span><br><span class="line"><span class="keyword">FROM</span> dbo.TestQuery</span><br><span class="line"><span class="keyword">WHERE</span> id <span class="keyword">IN</span> (</span><br><span class="line">                <span class="keyword">SELECT</span> C.id</span><br><span class="line">                <span class="keyword">FROM</span></span><br><span class="line">                (</span><br><span class="line">                    <span class="keyword">SELECT</span> A.id,</span><br><span class="line">                           B.k_value</span><br><span class="line">                    <span class="keyword">FROM</span></span><br><span class="line">                    (</span><br><span class="line">                        <span class="keyword">SELECT</span> id,</span><br><span class="line">                               <span class="keyword">CONVERT</span>(XML, <span class="string">&#x27;&lt;root&gt;&lt;v&gt;&#x27;</span> <span class="operator">+</span> REPLACE(k_value, <span class="string">&#x27;,&#x27;</span>, <span class="string">&#x27;&lt;/v&gt;&lt;v&gt;&#x27;</span>) <span class="operator">+</span> <span class="string">&#x27;&lt;/v&gt;&lt;/root&gt;&#x27;</span>) <span class="keyword">AS</span> k_value</span><br><span class="line">                        <span class="keyword">FROM</span> TestQuery</span><br><span class="line">                    ) A</span><br><span class="line">                        <span class="keyword">OUTER</span> APPLY</span><br><span class="line">                    (</span><br><span class="line">                        <span class="keyword">SELECT</span> id,</span><br><span class="line">                               N.v.value(<span class="string">&#x27;.&#x27;</span>, <span class="string">&#x27;varchar(100)&#x27;</span>) <span class="keyword">AS</span> k_value</span><br><span class="line">                        <span class="keyword">FROM</span> A.k_value.nodes(<span class="string">&#x27;/root/v&#x27;</span>) N(v)</span><br><span class="line">                    ) B</span><br><span class="line">                ) C</span><br><span class="line">                <span class="keyword">WHERE</span> C.k_value <span class="operator">=</span> <span class="variable">@query</span>_key</span><br><span class="line">            );</span><br></pre></td></tr></table></figure>
<h2 id="方法2"><a href="#方法2" class="headerlink" title="方法2"></a>方法2</h2><blockquote>这个方法中，我把分隔符逗号定义成了变量，因为直接拼接进sql中看起来不美观，如果为了简洁可以不使用变量</blockquote>

<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">DECLARE</span> <span class="variable">@split</span>_char NVARCHAR(<span class="number">10</span>);</span><br><span class="line"><span class="keyword">DECLARE</span> <span class="variable">@query</span>_key NVARCHAR(<span class="number">10</span>);</span><br><span class="line"><span class="keyword">SET</span> <span class="variable">@split</span>_char <span class="operator">=</span> <span class="string">&#x27;,&#x27;</span>;</span><br><span class="line"><span class="keyword">SET</span> <span class="variable">@query</span>_key <span class="operator">=</span> <span class="string">&#x27;K702&#x27;</span>;</span><br><span class="line"><span class="keyword">SELECT</span> A.id,</span><br><span class="line">       <span class="built_in">SUBSTRING</span>(A.k_value, <span class="number">2</span>, LEN(A.k_value) <span class="operator">-</span> <span class="number">2</span>) <span class="keyword">AS</span> k_value</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">(</span><br><span class="line">    <span class="keyword">SELECT</span> id,</span><br><span class="line">           <span class="variable">@split</span>_char <span class="operator">+</span> k_value <span class="operator">+</span> <span class="variable">@split</span>_char <span class="keyword">AS</span> k_value</span><br><span class="line">    <span class="keyword">FROM</span> dbo.TestQuery</span><br><span class="line">) A</span><br><span class="line"><span class="keyword">WHERE</span> A.k_value <span class="keyword">LIKE</span> <span class="string">&#x27;%&#x27;</span> <span class="operator">+</span> <span class="variable">@split</span>_char <span class="operator">+</span> <span class="variable">@query</span>_key <span class="operator">+</span> <span class="variable">@split</span>_char <span class="operator">+</span> <span class="string">&#x27;%&#x27;</span>;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>SQL Server</category>
      </categories>
      <tags>
        <tag>SQL技巧 常用语句</tag>
      </tags>
  </entry>
</search>
